// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int           @id @default(autoincrement())
  loginId          String        @unique
  nickname         String?
  phone            String?       @unique
  email            String?
  password         String
  cost             Int           @default(0) //0,用户 1,员工 2,管理员
  createdAt        DateTime      @default(dbgenerated("now()")) @db.DateTime
  updatedAt        DateTime      @default(dbgenerated("NOW() ON UPDATE NOW()")) @db.Timestamp(0) //解决prisma时区问题
  order            Order[]
  cart             Cart[]
  userbalance      UserBalance[]
  messages         Message[]     @relation("Sender")
  receivedMessages Message[]     @relation("Receiver")
  chatRooms        ChatRoom[]    @relation("ChatParticipants")
  article          Article[]     @relation("Author")
}

model Order {
  id          Int         @id @default(autoincrement())
  userId      Int
  orderStatus Int         @default(0) //0,已创建 1,待支付 2,已支付 3,正在制作 4,已完成 5,已取消 6,正在配送 7,已送达 8,已退款 9,已评价
  orderType   Int         @default(0) //0,堂食 1,外卖
  orderTime   DateTime    @default(dbgenerated("now()")) @db.DateTime
  totalPrice  Int         @default(0)
  orderList   OrderList[]
  user        User?       @relation(fields: [userId], references: [id])
}

model Menu {
  id          Int         @id @default(autoincrement())
  name        String
  price       Int
  type        Int         @default(0) //0,热菜 1,凉菜 2,主食 3,汤 4,饮品
  pictureUrl  String?
  discription String?
  isSell      Int         @default(1) //0,下架 1,上架
  orderList   OrderList[]
  cartList    CartList[]
}

model OrderList {
  id       Int   @id @default(autoincrement())
  orderId  Int
  menuId   Int
  quantity Int //订单份数
  order    Order @relation(fields: [orderId], references: [id])
  menu     Menu  @relation(fields: [menuId], references: [id])
}

model Cart {
  id       Int        @id @default(autoincrement())
  userId   Int        @unique
  isDelete Int        @default(0) //0,未删除 1,已删除
  user     User       @relation(fields: [userId], references: [id])
  cartList CartList[]
}

model CartList {
  id       Int  @id @default(autoincrement())
  cartId   Int
  menuId   Int
  quantity Int  @default(0) //购物车份数
  isSelect Int  @default(0) //0,未选中 1,已选中
  isDelete Int  @default(0) //0,未删除 1,已删除
  cart     Cart @relation(fields: [cartId], references: [id])
  menu     Menu @relation(fields: [menuId], references: [id])
}

model Message {
  id         Int      @id @default(autoincrement())
  content    String
  time       DateTime @default(dbgenerated("now()")) @db.DateTime
  receiverId Int
  senderId   Int
  sender     User     @relation("Sender", fields: [senderId], references: [id])
  receiver   User     @relation("Receiver", fields: [receiverId], references: [id])
}

model ChatRoom {
  id           Int    @id @default(autoincrement())
  name         String
  participants User[] @relation("ChatParticipants")
}

model UserBalance {
  id      Int  @id @default(autoincrement())
  userId  Int  @unique
  balance Int  @default(0)
  user    User @relation(fields: [userId], references: [id])
}

model Article {
  id       Int      @id @default(autoincrement())
  title    String
  content  String
  time     DateTime @default(dbgenerated("now()")) @db.DateTime
  authorId Int
  author   User     @relation("Author", fields: [authorId], references: [id])
}
